openapi: 3.0.0
info:
  title: Advanced API
  description: This is the API documentation for the NINA plugin Advanced API. Please use streaming instead of the default base64 encoding for images, as base64 support will be removed in the near future!
  version: 2.2.7
servers:
  - url: http://localhost:1888/v2/api
    description: V2 api server
paths:
  /version:
    get:
      tags:
        - Application
      summary: Version
      description: Returns the installed plugin version.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: 2.2.6.0
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"

  /version/nina:
    get:
      tags:
        - Application
      summary: NINA Version
      description: Returns the version of NINA.
      parameters:
        - in: query
          name: friendly
          required: false
          description: If true, the version will be returned in a friendly format.
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example:
                      oneOf:
                        - 3.2.0.1058
                        - "3.2 NIGHTLY #058"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"

  /application-start:
    get:
      tags:
        - Application
      summary: NINA start time
      description: Returns the time NINA was started.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: 2025-07-20T09:43:44.351798+02:00
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"

  /equipment/camera/info:
    get:
      tags:
        - Camera
      summary: Information
      description: This endpoint returns relevant information about the camera.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CameraInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/connect:
    get:
      tags:
        - Camera
      summary: Connect
      description: Connect to Camera
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/disconnect:
    get:
      tags:
        - Camera
      summary: Disconnect
      description: This endpoint disconnects the camera.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/list-devices:
    get:
      tags:
        - Camera
      summary: List Devices
      description: List all devices which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/rescan:
    get:
      tags:
        - Camera
      summary: Rescan Devices
      description: Rescans for new devices, and returns a list of all available devices
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/set-readout:
    get:
      tags:
        - Camera
      summary: Set readout mode
      description: This endpoint sets the readout mode of the camera.
      parameters:
        - in: query
          name: mode
          description: The readout mode to set.
          schema:
            type: integer
            minimum: 0
          required: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Readout mode updated
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        400:
          description: Invalid readout mode
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Invalid readout mode
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/cool:
    get:
      tags:
        - Camera
      summary: Cooling
      description: This endpoint cools the camera.
      parameters:
        - in: query
          name: temperature
          description: The temperature to cool the camera to.
          required: true
          schema:
            type: number
            format: double
        - in: query
          name: minutes
          description: The minimum duration to cool the camera. -1 for default duration
          required: true
          schema:
            type: number
            format: double
        - in: query
          name: cancel
          description: Whether to cancel the cooling process.
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Cooling started
                      - Cooling canceled
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Camera not connected / Camera has no temperature control
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Camera not connected
                      - Camera has no temperature control
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/warm:
    get:
      tags:
        - Camera
      summary: Warming
      description: This endpoint warms the camera.
      parameters:
        - in: query
          name: minutes
          description: The minimum duration to warm the camera. -1 for default duration
          required: true
          schema:
            type: number
            format: double
        - in: query
          name: cancel
          description: Whether to cancel the warming process.
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Warming started
                      - Warming canceled
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Camera not connected / Camera has no temperature control
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Camera not connected
                      - Camera has no temperature control
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/abort-exposure:
    get:
      tags:
        - Camera
      summary: Exposure Abort
      description: This endpoint aborts the current exposure.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Exposure aborted
                      - Camera not exposing
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Camera not connected / Camera not exposing
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Camera not connected
                      - Camera not exposing
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/dew-heater:
    get:
      tags:
        - Camera
      summary: Dew Heater Control
      description: This endpoint sets the dew heater.
      parameters:
        - in: query
          name: power
          description: Whether to turn the dew heater on or off.
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Dew heater set
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Camera not connected / Camera has no dew heater
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Camera not connected
                      - Camera has no dew heater
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/set-binning:
    get:
      tags:
        - Camera
      summary: Set Binning
      description: This endpoint sets the binning of the camera, if the specified binning is supported
      parameters:
        - in: query
          name: binning
          description: The binning mode
          required: true
          schema:
            type: string
            example: 2x2
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Binning set
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Camera not connected / Invalid binning mode
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Camera not connected
                      - Invalid binning mode
                      - Binning must be specified
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/capture:
    get:
      tags:
        - Camera
      summary: Capture / Platesolve
      description: This endpoint captures and/or returns an image. Can optionally solve the image.
      parameters:
        - in: query
          name: solve
          description: Whether to solve the image.
          required: false
          schema:
            type: boolean
        - in: query
          name: duration
          description: The duration of the exposure. If omitted the exposure time for plate solving will be used.
          required: false
          schema:
            type: number
            format: double
        - in: query
          name: gain
          description: The gain to use for the exposure. If omitted, the camera's default gain will be used.
          required: false
          schema:
            type: number
            format: int32
        - in: query
          name: getResult
          description: Whether to get the result.
          required: false
          schema:
            type: boolean
        - in: query
          name: resize
          description: Whether to resize the image.
          required: false
          schema:
            type: boolean
        - in: query
          name: quality
          description: The quality of the image, ranging from 1 (worst) to 100 (best). -1 or omitted for png
          required: false
          schema:
            type: number
            format: int32
        - in: query
          name: size
          description: The size of the image ([width]x[height]). Requires resize to be true.
          required: false
          schema:
            type: string
        - in: query
          name: scale
          description: The scale of the image. Requires resize to be true.
          required: false
          schema:
            type: number
            format: double
        - in: query
          name: stream
          description: Stream the image to the client. This will only stream the image in image/jpg or image/png format. The platesolve result is not included.
          required: false
          schema:
            type: boolean
        - in: query
          name: omitImage
          description: Omit the image from the response. This will only send the platesolve result, if the image was platesolved. Use it if you do not care about the image, only about the platesolve result.
          required: false
          schema:
            type: boolean
        - in: query
          name: waitForResult
          description: Wait for the capture to finish and then return the result. This will immediately take into account all the settings you would otherwise use together with getResult, like resize and stream.
          required: false
          schema:
            type: boolean
        - in: query
          name: save
          description: Save the image to the disk. This needs to be set, when capturing the image.
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    oneOf:
                      - type: string
                        enum:
                          - Capture already in progress
                          - Capture started
                      - type: object
                        properties:
                          Image:
                            type: string
                            example: "<base64 encoded image>"
                            description: The base64 encoded image
                          PlateSolveResult:
                            type: object
                            properties:
                              Coordinates:
                                type: object
                                properties:
                                  RA:
                                    type: number
                                  RADegrees:
                                    type: number
                                  Dec:
                                    type: number
                                  DECDegrees:
                                    type: number
                                  Epoch:
                                    type: integer
                              PositionAngle:
                                type: number
                              PixelScale:
                                type: number
                              Radius:
                                type: number
                              Flipped:
                                type: boolean
                              Success:
                                type: boolean
                              RaErrorString:
                                type: string
                              RaPixError:
                                type: number
                              DecPixError:
                                type: number
                              DecErrorString:
                                type: string
                        required:
                          - Image
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
            image/png:
              schema:
                description: Image in png format, when stream is set to true and the image quality is not specified or set to -1
                type: array
                format: binary
            image/jpg:
              schema:
                description: Image in jpg format, when stream is set to true and the image quality is specified
                type: array
                format: binary
        "409":
          description: Camera not connected / Camera currently exposing
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Camera not connected
                      - Camera currently exposing
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/camera/capture/statistics:
    get:
      tags:
        - Camera
      summary: Capture Statistics
      description: This endpoint returns the image statistics for the last captured image.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Stars:
                        type: integer
                      HFR:
                        type: number
                      Median:
                        type: number
                      MedianAbsoluteDeviation:
                        type: number
                      Mean:
                        type: number
                      Max:
                        type: integer
                      Min:
                        type: integer
                      StDev:
                        type: number
                  Error:
                    type: string
                  StatusCode:
                    type: integer
                  Success:
                    type: boolean
                  Type:
                    type: string

        "400":
          description: Capture not available
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "No image available"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/info:
    get:
      tags:
        - Dome
      summary: Information
      description: Get Dome information
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomeInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/connect:
    get:
      tags:
        - Dome
      summary: Connect
      description: Connect to Dome
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/disconnect:
    get:
      tags:
        - Dome
      summary: Disconnect
      description: Disconnect the Dome
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/list-devices:
    get:
      tags:
        - Dome
      summary: List Devices
      description: List all devices which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/rescan:
    get:
      tags:
        - Dome
      summary: Rescan Devices
      description: Rescans for new devices, and returns a list of all available devices
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/open:
    get:
      tags:
        - Dome
      summary: Open Shutter
      description: Open Dome Shutter
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Shutter opening
                      - Shutter already open
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Dome not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Dome not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/close:
    get:
      tags:
        - Dome
      summary: Close Shutter
      description: Close Dome Shutter
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Shutter closing
                      - Shutter already closed
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Dome not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Dome not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/stop:
    get:
      tags:
        - Dome
      summary: Stop Dome Movement
      description: Stop Dome movement.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Movement stopped
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Dome not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Dome not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/set-follow:
    get:
      tags:
        - Dome
      summary: Set Dome Follow
      description: Start or stop the dome to follow the telescope
      parameters:
        - in: query
          name: enabled
          description: Enable or disable dome follow
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Following enabled
                      - Following disabled
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Dome not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Dome not connected
                      - Dome shutter not open
                      - Mount not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/sync:
    get:
      tags:
        - Dome
      summary: Sync Dome To Telescope
      description: Sync dome to telescope coordinates
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Dome Sync Started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Dome not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Dome not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/slew:
    get:
      tags:
        - Dome
      summary: Slew
      description: Slew dome to specified azimuth
      parameters:
        - in: query
          name: azimuth
          description: Azimuth in degrees
          schema:
            type: number
            format: float
        - in: query
          name: waitToFinish
          description: Wait until slew is finished
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Dome Slew Started
                      - Dome Slew finished
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Dome not connected / parked
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Dome not connected
                      - Dome is parked
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/set-park-position:
    get:
      tags:
        - Dome
      summary: Set Park Position
      description: Sets the current dome position as park position, if supported
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Park position set
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Dome not connected / parked
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Dome not connected
                      - Dome can not set park position
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/park:
    get:
      tags:
        - Dome
      summary: Park
      description: Parks the dome
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Parking
                      - Dome already parked
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Dome not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Dome not connected
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/dome/home:
    get:
      tags:
        - Dome
      summary: Home
      description: Homes the dome
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Homing
                      - Dome already homed
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Dome not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Dome not connected
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/filterwheel/info:
    get:
      tags:
        - FilterWheel
      summary: Information
      description: Get Filterwheel information
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FWInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/filterwheel/connect:
    get:
      tags:
        - FilterWheel
      summary: Connect
      description: Connect to Filterwheel
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/filterwheel/disconnect:
    get:
      tags:
        - FilterWheel
      summary: Disconnect
      description: Disconnect the filterwheel
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/filterwheel/list-devices:
    get:
      tags:
        - FilterWheel
      summary: List Devices
      description: List all devices which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/filterwheel/rescan:
    get:
      tags:
        - FilterWheel
      summary: Rescan Devices
      description: Rescans for new devices, and returns a list of all available devices
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/filterwheel/change-filter:
    get:
      tags:
        - FilterWheel
      summary: Change Filter
      description: Change Filter
      parameters:
        - in: query
          name: filterId
          description: The filter to change to.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Filter changed
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Filterwheel not connected / Filter not available
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Filterwheel not connected
                      - Filter not available
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/filterwheel/filter-info:
    get:
      tags:
        - FilterWheel
      summary: Filter Information
      description: Get Filterwheel Filter
      parameters:
        - in: query
          name: filterId
          description: The filter to get.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterInfo"
        "409":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Filterwheel not connected
                      - Filter not available
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/flatdevice/info:
    get:
      tags:
        - Flat Panel
      summary: Information
      description: Get information about the flat panel, Coverstate represents the following values&#58; 0&#58; Unknown, 1&#58; NeitherOpenNorClosed, 2&#58; Closed, 3&#58; Open, 4&#58; Error, 5&#58; Not present
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlatDeviceInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/flatdevice/connect:
    get:
      tags:
        - Flat Panel
      summary: Connect
      description: Connect the flat panel
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/flatdevice/disconnect:
    get:
      tags:
        - Flat Panel
      summary: Disconnect
      description: Disconnect the flat panel
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/flatdevice/list-devices:
    get:
      tags:
        - Flat Panel
      summary: List Devices
      description: List all devices which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/flatdevice/rescan:
    get:
      tags:
        - Flat Panel
      summary: Rescan Devices
      description: Rescans for new devices, and returns a list of all available devices
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/flatdevice/set-light:
    get:
      tags:
        - Flat Panel
      summary: Set Light
      description: Set the light on the flatdevice
      parameters:
        - in: query
          name: on
          schema:
            type: boolean
          required: true
          description: The actual parameter name is "on", but for some reason the documentation automatically renames it to true...
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "Flatdevice light set"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"

        "409":
          description: Flatdevice not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: "Flatdevice not connected"
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/flatdevice/set-cover:
    get:
      tags:
        - Flat Panel
      summary: Set Cover
      description: Set the cover to the specified position
      parameters:
        - name: closed
          in: query
          description: Indicates if the cover should be closed or open
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "Flatdevice cover set"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"

        "409":
          description: Flatdevice not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: "Flatdevice not connected"
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/flatdevice/set-brightness:
    get:
      tags:
        - Flat Panel
      summary: Set Brightness
      description: Set Brightness
      parameters:
        - name: brightness
          in: query
          description: Brightness
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 100
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "Flatdevice brightness set"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"

        "409":
          description: Flatdevice not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: "Flatdevice not connected"
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/focuser/info:
    get:
      tags:
        - Focuser
      summary: Information
      description: Get the focuser info
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FocuserInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/focuser/connect:
    get:
      tags:
        - Focuser
      summary: Connect
      description: Connect to Focuser
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/focuser/disconnect:
    get:
      tags:
        - Focuser
      summary: Disconnect
      description: Disconnect the focuser
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/focuser/list-devices:
    get:
      tags:
        - Focuser
      summary: List Devices
      description: List all devices which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/focuser/rescan:
    get:
      tags:
        - Focuser
      summary: Rescan Devices
      description: Rescans for new devices, and returns a list of all available devices
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/focuser/move:
    get:
      tags:
        - Focuser
      summary: Move
      description: Move the focuser
      parameters:
        - in: query
          name: position
          schema:
            type: integer
          required: true
          description: Position to move to
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Move started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/focuser/auto-focus:
    get:
      tags:
        - Focuser
      summary: Auto Focus
      description: Start an AF
      parameters:
        - in: query
          name: cancel
          schema:
            type: boolean
          required: false
          description: Can be used to cancel a running autofocus (If it was started using the api)
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Autofocus started
                      - Autofocus canceled
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Focuser not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Focuser not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/focuser/last-af:
    get:
      tags:
        - Focuser
      summary: Get Last Autofocus
      description: Get last autofocus
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FocuserLastAF"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/guider/info:
    get:
      tags:
        - Guider
      summary: Information
      description: Get guider information
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuiderInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/guider/connect:
    get:
      tags:
        - Guider
      summary: Connect
      description: Connect to Guider
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/guider/disconnect:
    get:
      tags:
        - Guider
      summary: Disconnect
      description: Disconnect the guider
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/guider/list-devices:
    get:
      tags:
        - Guider
      summary: List Devices
      description: List all devices which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/guider/rescan:
    get:
      tags:
        - Guider
      summary: Rescan Devices
      description: Rescans for new devices, and returns a list of all available devices
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/guider/start:
    get:
      tags:
        - Guider
      summary: Start Guiding
      description: Start guiding
      parameters:
        - in: query
          name: calibrate
          description: Whether to force the guider to calibrate before start guiding
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Guiding started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Guider not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Guider not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/guider/stop:
    get:
      tags:
        - Guider
      summary: Stop Guiding
      description: Stop guiding
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Guiding stopped
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Guider not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Guider not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/guider/clear-calibration:
    get:
      tags:
        - Guider
      summary: Clear Calibration
      description: Clears the calibration data, forces the guider to recalibrate when it starts guiding
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Calibration cleared
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Guider not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Guider not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/guider/graph:
    get:
      tags:
        - Guider
      summary: Graph
      description: Gets the last n guide steps needed to construct a graph, with n being the number of saved steps as configured on the graph in NINA
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuideStepsHistory"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/info:
    get:
      tags:
        - Mount
      summary: Information
      description: Get mount information
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MountInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/connect:
    get:
      tags:
        - Mount
      summary: Connect
      description: Connect to Mount
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/disconnect:
    get:
      tags:
        - Mount
      summary: Disconnect
      description: Disconnect the mount
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/list-devices:
    get:
      tags:
        - Mount
      summary: List Devices
      description: List all devices which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/rescan:
    get:
      tags:
        - Mount
      summary: Rescan Devices
      description: Rescans for new devices, and returns a list of all available devices
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/home:
    get:
      tags:
        - Mount
      summary: Home
      description: Home the mount
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Homing
                      - Mount already homed
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Mount not connected / Mount parked
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Mount not connected
                      - Mount parked
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/tracking:
    get:
      tags:
        - Mount
      summary: Tracking Mode
      description: Set tracking mode
      parameters:
        - in: query
          name: mode
          description: The tracking mode to set. 0&#58; Siderial, 1&#58; Lunar, 2&#58; Solar, 3&#58; King, 4&#58; Stopped
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 4
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Tracking mode changed
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Mount not connected / Mount parked / Invalid tracking mode
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Mount not connected
                      - Mount parked
                      - Invalid tracking mode
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/park:
    get:
      tags:
        - Mount
      summary: Park
      description: Park the mount
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Parking
                      - Mount already parked
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Mount not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Mount not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/unpark:
    get:
      tags:
        - Mount
      summary: Unpark
      description: Unpark the mount
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Unparking
                      - Mount not parked
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Mount not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Mount not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/flip:
    get:
      tags:
        - Mount
      summary: Flip
      description: Performs a meridian flip to the current coordinates. This will only flip the mount if it is needed, it will not force the mount to flip
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Flipping
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Mount not connected / parked
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Mount not connected
                      - Mount parked
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/slew:
    get:
      tags:
        - Mount
      summary: Slew
      description: Performs a slew to the provided coordinates
      parameters:
        - in: query
          name: ra
          description: The RA angle of the target in degree
          required: true
          schema:
            type: number
            format: double
        - in: query
          name: dec
          description: The Dec angle of the target in degree
          required: true
          schema:
            type: number
            format: double
        - in: query
          name: waitForResult
          description: Whether to wait for the slew to finish
          required: false
          schema:
            type: boolean
        - in: query
          name: center
          description: Whether to center the telescope on the target
          required: false
          schema:
            type: boolean
        - in: query
          name: rotate
          description: Whether to perform a center and rotate
          required: false
          schema:
            type: boolean
        - in: query
          name: rotationAngle
          description: The rotation angle in degree
          required: false
          schema:
            type: number
            format: double
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Started Slew
                      - Slew finished
                      - Slew failed
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Mount not connected / parked
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Mount not connected
                      - Mount parked
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/slew/stop:
    get:
      tags:
        - Mount
      summary: Stop Slew
      description:
        Stops any slew, even if it was not started using the api. However this is mainly useful for slews you issued yourself, since it doesn't completely abort slew&centers started by NINA.
        Therefore the recommended use is to stop simple slews without center or rotate. With center or rotate, this may take a few seconds to complete.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "Stopped slew"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Mount not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Mount not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/set-park-position:
    get:
      tags:
        - Mount
      summary: Set Park Position
      description: Sets the current mount position as park position. This requires the mount to be unparked.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "Park position set"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Can't update park position
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Mount not connected
                      - Mount can not set park position
                      - Park position update failed
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/mount/sync:
    get:
      tags:
        - Mount
      summary: Sync
      description: Sync the scope, either by manually supplying the coordinates or by solving and syncing. If the coordinates are omitted, a platesolve will be performed.
      parameters:
        - in: query
          name: ra
          required: false
          description: Right ascension in degrees
          schema:
            type: number
            format: double
        - in: query
          name: dec
          required: false
          description: Declination in degrees
          schema:
            type: number
            format: double
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "Synced"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Can't sync
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Mount not connected
                      - Mount is parked
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/rotator/info:
    get:
      tags:
        - Rotator
      summary: Information
      description: Get rotator information
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RotatorInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/rotator/connect:
    get:
      tags:
        - Rotator
      summary: Connect
      description: Connect to Rotator
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/rotator/disconnect:
    get:
      tags:
        - Rotator
      summary: Disconnect
      description: Disconnect the rotator
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/rotator/list-devices:
    get:
      tags:
        - Rotator
      summary: List Devices
      description: List all devices which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/rotator/rescan:
    get:
      tags:
        - Rotator
      summary: Rescan Devices
      description: Rescans for new devices, and returns a list of all available devices
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/rotator/move:
    get:
      tags:
        - Rotator
      summary: Move
      description: Move the rotator
      parameters:
        - in: query
          name: position
          description: The position to move to
          required: true
          schema:
            type: number
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Rotator move started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Rotator not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Rotator not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/rotator/move-mechanical:
    get:
      tags:
        - Rotator
      summary: Move Mechanically
      description: Move the rotator mechanically
      parameters:
        - in: query
          name: position
          description: The position to move to
          required: true
          schema:
            type: number
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Rotator move started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Rotator not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Rotator not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/safetymonitor/info:
    get:
      tags:
        - Safety Monitor
      summary: Information
      description: Get safety monitor information
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SafetyMonitorInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/safetymonitor/connect:
    get:
      tags:
        - Safety Monitor
      summary: Connect
      description: Connect to safety monitor
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/safetymonitor/disconnect:
    get:
      tags:
        - Safety Monitor
      summary: Disconnect
      description: Disconnect the safety monitor
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/safetymonitor/list-devices:
    get:
      tags:
        - Safety Monitor
      summary: List Devices
      description: List all devices which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/safetymonitor/rescan:
    get:
      tags:
        - Safety Monitor
      summary: Rescan Devices
      description: Rescans for new devices, and returns a list of all available devices
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/switch/info:
    get:
      tags:
        - Switch
      summary: Information
      description: Get switch information
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SwitchInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/switch/connect:
    get:
      tags:
        - Switch
      summary: Connect
      description: Connect to Switch
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/switch/disconnect:
    get:
      tags:
        - Switch
      summary: Disconnect
      description: Disconnect the switch
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/switch/list-devices:
    get:
      tags:
        - Switch
      summary: List Devices
      description: List all devices which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/switch/rescan:
    get:
      tags:
        - Switch
      summary: Rescan Devices
      description: Rescans for new devices, and returns a list of all available devices
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/switch/set:
    get:
      tags:
        - Switch
      summary: Set Value
      description: Set switch value
      parameters:
        - in: query
          name: index
          description: The index of the switch to set
          required: true
          schema:
            type: integer
            format: short
        - in: query
          name: value
          description: The value to set
          required: true
          schema:
            type: number
            format: double
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Switch value updated
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Switch not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Switch not connected
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/weather/info:
    get:
      tags:
        - Weather
      summary: Information
      description: Get weather information
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeatherInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/weather/connect:
    get:
      tags:
        - Weather
      summary: Connect
      description: Connect to weather source
      parameters:
        - in: query
          name: to
          required: false
          description: The Id of the device that should be connected.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Connected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/weather/disconnect:
    get:
      tags:
        - Weather
      summary: Disconnect
      description: Disconnect the weather
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Disconnected
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/weather/list-devices:
    get:
      tags:
        - Weather
      summary: List Weather Sources
      description: List all weather sources which can be connected
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /equipment/weather/rescan:
    get:
      tags:
        - Weather
      summary: Rescan Sources
      description: Rescans for new weather sources, and returns a list of all available sources
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /application/switch-tab:
    get:
      tags:
        - Application
      summary: Switch Tab
      description: Switches the application tab
      parameters:
        - in: query
          name: tab
          description: The tab to switch to
          required: true
          schema:
            type: string
            enum:
              - equipment
              - skyatlas
              - framing
              - flatwizard
              - sequencer
              - imaging
              - options
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Switched tab
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Invalid application tab
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Invalid application tab
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /application/get-tab:
    get:
      tags:
        - Application
      summary: Get Tab
      description: Gets the current application tab
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - equipment
                      - skyatlas
                      - framing
                      - flatwizard
                      - sequencer
                      - imaging
                      - options
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Invalid application tab
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Invalid application tab
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /application/plugins:
    get:
      tags:
        - Application
      summary: Plugins
      description: Get a list of installed plugins. This is useful for example
        if you want to use an integrated plugin like livestack or TPPA
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    format: string
                    example:
                      [
                        "Advanced API",
                        "Livestack",
                        "Three Point Polar Alignment",
                        "Touch 'N' Stars",
                      ]
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /application/logs:
    get:
      tags:
        - Application
      summary: Logs
      description: Get a list of the last N log entries, this will ignore the header of the file. The endpoint is limited by the log level set in NINA
      parameters:
        - in: query
          name: lineCount
          description: Return the last N lines of the log file, with N being the lineCount
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: level
          description: Filter the log entries by level. This uses the provided level as a minimum level, so level INFO will return INFO, WARNING and ERROR entries
          required: false
          schema:
            type: string
            enum:
              - TRACE
              - DEBUG
              - INFO
              - WARNING
              - ERROR
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Timestamp:
                        type: string
                        example: "2025-05-04T14:57:39.5079"
                      Level:
                        type: string
                        example: "INFO"
                      Source:
                        type: string
                        example: "CameraChooserVM.cs"
                      Member:
                        type: string
                        example: "GetEquipment"
                      Line:
                        type: string
                        example: "279"
                      Message:
                        type: string
                        example: "Found 2 ASCOM Cameras"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /application/screenshot:
    get:
      tags:
        - Application
      summary: Screenshot
      description: Takes a screenshot
      parameters:
        - in: query
          name: resize
          description: Whether to resize the screenshot.
          required: false
          schema:
            type: boolean
        - in: query
          name: quality
          description: The quality of the screenshot, ranging from 1 (worst) to 100 (best). -1 or omitted for png
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: size
          description: The size of the screenshot ([width]x[height]). Requires resize to be true.
          required: false
          schema:
            type: string
        - in: query
          name: scale
          description: The scale of the screenshot. Requires resize to be true.
          required: false
          schema:
            type: number
            format: double
        - in: query
          name: stream
          description: Stream the image to the client. This will stream the image in image/jpg or image/png format.
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "<base64 encoded image>"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
            image/png:
              schema:
                description: Image in png format, when stream is set to true and the image quality is not specified or set to -1
                type: array
                format: binary
            image/jpg:
              schema:
                description: Image in jpg format, when stream is set to true and the image quality is specified
                type: array
                format: binary
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /framing/info:
    get:
      tags:
        - Framing Assistant
      summary: Information
      description: Get framing assistant information
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FramingAssistantInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /framing/set-source:
    get:
      tags:
        - Framing Assistant
      summary: Set Source
      description: Set framing assistant source. This requires the framing assistant to be initalized, which can by achieved by openening it once.
      parameters:
        - in: query
          name: source
          description: The source to set
          required: true
          schema:
            type: string
            enum:
              - NASA
              - SKYSERVER
              - STSCI
              - ESO
              - HIPS2FITS
              - SKYATLAS
              - FILE
              - CACHE
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Source updated
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Invalid source
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Invalid source
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /framing/set-coordinates:
    get:
      tags:
        - Framing Assistant
      summary: Set Coordinates
      description: Set framing assistant coordinates. This requires the framing assistant to be initalized, which can by achieved by openening it once.
      parameters:
        - in: query
          name: RAangle
          description: The RA angle to set
          required: true
          schema:
            type: number
            format: double
        - in: query
          name: DecAngle
          description: The Dec angle to set
          required: true
          schema:
            type: number
            format: double
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Coordinates updated
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /framing/slew:
    get:
      tags:
        - Framing Assistant
      summary: Slew
      description: Slew the mount to the current coordinates. This requires the framing assistant to be initalized, which can by achieved by openening it once.
      parameters:
        - in: query
          name: slew_option
          description: The slew option to use. Possible values&#58; Center, Rotate. If this is omitted, it is a simple slew.
          required: false
          schema:
            type: string
            enum:
              - Center
              - Rotate
        - in: query
          name: waitForResult
          description: Whether to wait for the slew to finish
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    enum:
                      - Slew started
                      - Slew finished
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /framing/set-rotation:
    get:
      tags:
        - Framing Assistant
      summary: Set Rotation
      description: Set framing assistant rotation. This requires the framing assistant to be initalized, which can by achieved by openening it once.
      parameters:
        - in: query
          name: rotation
          description: The rotation to set
          required: true
          schema:
            type: number
            format: double
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Rotation updated
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /framing/determine-rotation:
    get:
      tags:
        - Framing Assistant
      summary: Determine Rotation
      description: Determine rotation from camera. This does nothing else than what the button in the framing assistant does. If waitForResult is set to true, the method will wait until the rotation is determined. This will only work if an image is loaded in the framing assistant
      parameters:
        - in: query
          name: waitForResult
          description: Whether to wait for the result.
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      Response:
                        type: string
                        example: Determine rotation started
                      Error:
                        type: string
                        example: ""
                      StatusCode:
                        type: integer
                        example: 200
                      Success:
                        type: boolean
                        example: true
                      Type:
                        type: string
                        example: "API"
                  - $ref: "#/components/schemas/FramingAssistantInfo"
        "400":
          description: Process could not be started
          content:
            application/json:
              schema:
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Could not start process
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /image/{index}:
    get:
      tags:
        - Image
      summary: Get Image
      description: Get image
      parameters:
        - in: path
          name: index
          description: The index of the image to get
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: resize
          description: Whether to resize the image.
          required: false
          schema:
            type: boolean
        - in: query
          name: quality
          description: The quality of the image, ranging from 1 (worst) to 100 (best). -1 or omitted for png
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: size
          description: The size of the image ([width]x[height]). Requires resize to be true.
          required: false
          schema:
            type: string
        - in: query
          name: scale
          description: The scale of the image. Requires resize to be true.
          required: false
          schema:
            type: number
            format: double
        - in: query
          name: factor
          description: The stretch factor to apply, between 0 and 1. Defaults to what is configured in the profile.
          required: false
          schema:
            type: number
            format: double
        - in: query
          name: blackClipping
          description: The black clipping to apply. Defaults to what is configured in the profile.
          required: false
          schema:
            type: number
            format: double
        - in: query
          name: unlinked
          description: Indicates if the stretch should be unlinked. Defaults to what is configured in the profile.
          required: false
          schema:
            type: boolean
        - in: query
          name: stream
          description: Stream the image to the client. This will stream the image in image/jpg or image/png format.
          required: false
          schema:
            type: boolean
        - in: query
          name: debayer
          description: Indicates if the image should be debayered
          required: false
          schema:
            type: boolean
        - in: query
          name: bayerPattern
          description:
            What bayer pattern to use for debayering, if debayer is true. If this is not specified, the api will try to use the bayer pattern that is configured in the profile as its first option,
            if that is set to Auto, the api will try to use the bayer pattern reported by the camera if it is connected. The fallback value is Monochrome.
          required: false
          schema:
            type: string
            enum:
              - Monochrome
              - Color
              - RGGB
              - CMYG
              - CMYG2
              - LRGB
              - BGGR
              - GBRG
              - GRBG
              - GRGB
              - GBGR
              - RGBG
              - BGRG
        - in: query
          name: autoPrepare
          description: Setting this to true will leave all processing up to NINA and you will recieve exactly the same image as you see in NINA. All other parameters related to image processing will have no effect.
          required: false
          schema:
            type: boolean
        - in: query
          name: imageType
          description: Filter the image history by image type. This is useful if you got the index of an image using the history with a filter and now want to get the image. E.g. the 3rd flat in the image history is the 3rd flat in the image endpoint.
          required: false
          schema:
            type: string
            enum:
              - LIGHT
              - FLAT
              - DARK
              - BIAS
              - SNAPSHOT
        - in: query
          name: raw_fits
          description: Whether to send the image (without streaming) as a raw FITS format. Will return an error if the image is not of type FITS.
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "<base64 encoded image>"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
            image/png:
              schema:
                description: Image in png format, when stream is set to true and the image quality is not specified or set to -1
                type: array
                format: binary
            image/jpg:
              schema:
                description: Image in jpg format, when stream is set to true and the image quality is specified
                type: array
                format: binary
        "400":
          description: Invalid image index / invalid bayer pattern / image is not a FITS file
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Index out of range
                      - Invalid bayer pattern
                      - Image is not a FITS file
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /image-history:
    get:
      tags:
        - Image
      summary: Get Image History
      description: Get image history. Only one parameter is required
      parameters:
        - in: query
          name: all
          description: Whether to get all images or only the current image
          required: false
          schema:
            type: boolean
        - in: query
          name: index
          description: The index of the image to get
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: count
          description: Whether to count the number of images
          required: false
          schema:
            type: boolean
        - in: query
          name: imageType
          description:
            Filter by image type. This will restrict the result to images of the specified type, meaning that count for example will only count images of the specified type.
            If this is omitted, all images are included.
          required: false
          schema:
            type: string
            enum:
              - LIGHT
              - FLAT
              - DARK
              - BIAS
              - SNAPSHOT
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    oneOf:
                      - type: array
                        items:
                          type: object
                          properties:
                            ExposureTime:
                              type: number
                            ImageType:
                              type: string
                              enum:
                                - LIGHT
                                - FLAT
                                - DARK
                                - BIAS
                                - SNAPSHOT
                            Filter:
                              type: string
                            RmsText:
                              type: string
                            Temperature:
                              type: string
                            CameraName:
                              type: string
                            Gain:
                              type: integer
                            Offset:
                              type: integer
                            Date:
                              type: string
                            TelescopeName:
                              type: string
                            FocalLength:
                              type: number
                            StDev:
                              type: number
                            Mean:
                              type: number
                            Median:
                              type: number
                            Stars:
                              type: integer
                            HFR:
                              type: number
                            IsBayered:
                              type: boolean
                      - type: integer
                        description: The number of images
                        example: 1
                        minimum: 0
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Invalid image index
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Index out of range
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /image/thumbnail/{index}:
    get:
      tags:
        - Image
      summary: Get Thumbnail
      description: Get the thumbnail of an image. This requies Create Thumbnails to be enabled in NINA. Otherwise, use the image endpoint and resize the image. This thumbnail has a width of 256px.
      parameters:
        - in: path
          name: index
          description: The index of the image to get
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: imageType
          description: Filter the image history by image type. This is useful if you got the index of an image using the history with a filter and now want to get the image. E.g. the 3rd flat in the image history is the 3rd flat in the image endpoint.
          required: false
          schema:
            type: string
            enum:
              - LIGHT
              - FLAT
              - DARK
              - BIAS
              - SNAPSHOT
      responses:
        "200":
          description: Successful response
          content:
            image/jpg:
              schema:
                description: Image in jpg format, when stream is set to true and the image quality is specified
                type: array
                format: binary
        "400":
          description: No thumbnails available
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: "No thumbnails available"
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /profile/show:
    get:
      tags:
        - Profile
      summary: Show Profile
      description: Shows the profile
      parameters:
        - in: query
          name: active
          description: Whether to show the active profile or a list of all available profiles
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileInfo"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /profile/change-value:
    get:
      tags:
        - Profile
      summary: Change Profile Value
      description: Changes a value in the profile
      parameters:
        - in: query
          name: settingpath
          description: The path to the setting to change. (eg. CameraSettings-PixelSize). This refers the the profile structure like it is recieved when using /profile/show?active=true. Seperate each object with a dash (-)
          required: true
          schema:
            type: string
            example: CameraSettings-PixelSize
        - in: query
          name: newValue
          description: The new value to set
          required: true
          schema:
            type: object
            example: 3.2
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Updated setting
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Invalid path / Invalid value
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Invalid path
                      - New value can't be null
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /profile/switch:
    get:
      tags:
        - Profile
      summary: Switch Profile
      description: Switches the profile
      parameters:
        - in: query
          name: profileid
          description: The id of the profile to switch to. This id can be retrieved using show with active=false
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Successfully switched profile
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: No profile with specified id found!
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /profile/horizon:
    get:
      tags:
        - Profile
      summary: Horizon
      description: Gets the horizon for the active profile
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Altitudes:
                        type: array
                        items:
                          type: number
                      Azimuths:
                        type: array
                        items:
                          type: number
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /sequence/json:
    get:
      tags:
        - Sequence
      summary: JSON
      description:
        Get sequence as json. For this to work, there needs to be a deep sky object container present and the sequencer view has to be initalized! This endpoint is generally advised to use over state since it gives
        more reliable results.
      responses:
        "200":
          description: Successful response, best to try it out yourself
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SequenceBaseJson"
        "409":
          description: Sequencer not initialized / No DSO container found
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Sequencer not initialized
                      - No DSO container found
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /sequence/state:
    get:
      tags:
        - Sequence
      summary: Complete Sequence
      description:
        Get sequence as json. For this to work, there needs to be a deep sky object container present and the sequencer view has to be initalized! This is similar to the json endpoint, however the
        returned sequence is much more elaborate and also supports plugins. The returned json from /json is not directly compatible with this endpoint. Use this endpoint (not json!) as reference for sequence editing!
        In general however I recommend using the json endpoint as it gives more reliable results, so use this if you do not need the extra functionality.
      responses:
        "200":
          description: Successful response, best to try it out yourself
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SequenceBaseJson"
        "409":
          description: Sequencer not initialized / No DSO container found
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Sequencer not initialized
                      - No DSO container found
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /sequence/edit:
    get:
      tags:
        - Sequence
      summary: Edit a Sequence
      description:
        This works similary to profile/set-value. Note that this mainly supports fields that expect simple types like strings, numbers etc,
        and may not work for things like enums or objects (filter, time source, ...). This is an experimental feature, and it could have unexpected side effects or simply not work for some instructions or fields.
        If you encounter any bugs (except that it is not working with enums or objects), feel free to create an issue on github or contact me on the NINA discord.
      parameters:
        - in: query
          name: path
          description:
            The path to the property that should be updated. Use `GlobalTriggers`, `Start`, `Imaging`, `End` for the sequence root containers.
            Then use the name of the property or the index of the item in a list, seperated with `-`.
            The example would set the exposure time of a Take Exposure instruction, contained in a DSO container, to 20s.
            Use `sequence/state` as reference, not `sequence/json`!
          required: true
          schema:
            type: string
            example: "Imaging-Items-0-Items-0-ExposureTime"
        - in: query
          name: value
          description: The new value
          required: true
          schema:
            type: string
            example: "20"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Updated setting
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Faulty state
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Sequence is not initialized
                      - No DSO Container found
                      - Invalid path
                      - New value can't be null
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /sequence/start:
    get:
      tags:
        - Sequence
      summary: Start
      description: Start sequence. This requires the sequencer to be initalized, which can be achieved by opening the tab once.
      parameters:
        - in: query
          name: skipValidation
          description: Skip validation of the sequence
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Sequence started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Sequence not initialized / Sequence already running
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Sequence is not initialized
                      - Sequence is already running
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /sequence/stop:
    get:
      tags:
        - Sequence
      summary: Stop
      description: Stop sequence. This requires the sequencer to be initalized, which can be achieved by opening the tab once.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Sequence stopped
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Sequence not initialized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Sequence is not initialized
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /sequence/reset:
    get:
      tags:
        - Sequence
      summary: Reset Sequence
      description: Reset sequence. This requires the sequencer to be initalized, which can be achieved by opening the tab once.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Sequence reset
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Sequence not initialized / No DSO Container found
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Sequence is not initialized
                      - No DSO Container found
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /sequence/list-available:
    get:
      tags:
        - Sequence
      summary: Available Sequences
      description: List available sequences.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      type: string
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /sequence/set-target:
    get:
      tags:
        - Sequence
      summary: Set Target
      description: Set the target of any one of the active target containers in the sequence
      parameters:
        - name: name
          in: query
          description: The target name
          required: true
          schema:
            type: string
            example: Orion
        - name: ra
          in: query
          description: The RA coordinate in degrees
          required: true
          schema:
            type: number
            format: double
        - name: dec
          in: query
          description: The DEC coordinate in degrees
          required: true
          schema:
            type: number
            format: double
        - name: rotation
          in: query
          description: The target rotation
          required: true
          schema:
            type: number
            format: double
        - name: index
          in: query
          description: The index of the target container to update
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Target updated
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Invalid target index
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Index out of range
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "409":
          description: Sequencer not initialized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: Sequencer not initializedd
                  StatusCode:
                    type: integer
                    example: 409
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal Server Error, Unknown Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /sequence/load:
    get:
      tags:
        - Sequence
      summary: Load Sequence from file
      description: Loads a sequence from a file from the default sequence folders, the names can be retrieved using the `sequence/list-available` endpoint
      parameters:
        - name: sequenceName
          in: query
          description: The name of the sequence to load
          required: true
          schema:
            type: string
            example: Orion
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Sequence updated
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Sequence not initialized or already running
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Sequence is not initialized
                      - Sequence is already running
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal Server Error, Unknown Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"
    post:
      tags:
        - Sequence
      summary: Load Sequence from JSON
      description: Loads a sequence from a JSON supplied by the client in the request body
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Sequence updated
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Sequence not initialized or already running
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    enum:
                      - Sequence is not initialized
                      - Sequence is already running
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal Server Error, Unknown Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /event-history:
    get:
      tags:
        - Event Websocket
      summary: Event History
      description: Get event history
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      type: object
                      properties:
                        Event:
                          type: string
                        Time:
                          type: string
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /livestack/start:
    get:
      tags:
        - Livestack
      summary: Start Livestack
      description: Starts Livestack, requires Livestack >= v1.0.0.9. Note that this method cannot fail, even if the livestack plugin is not installed or something went wrong. This simply issues a command to start the livestack.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Live stack started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /livestack/stop:
    get:
      tags:
        - Livestack
      summary: Stop Livestack
      description: Stops Livestack, requires Livestack >= v1.0.0.9. Note that this method cannot fail, even if the livestack plugin is not installed or something went wrong. This simply issues a command to stop the livestack.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Live stack stopped
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /livestack/image/available:
    get:
      tags:
        - Livestack
      summary: Available Stacks
      description: Livestack >= v1.0.0.9. Returns a list of available stacks, which can be retrieved
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      type: object
                      properties:
                        Filter:
                          type: string
                          example: RGB
                        Target:
                          type: string
                          example: M31
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /livestack/image/{target}/{filter}:
    get:
      tags:
        - Livestack
      summary: Get Stacked Image
      description: Gets the stacked image from the livestack plugin for a given target and filter.
      parameters:
        - in: path
          name: target
          required: true
          schema:
            type: string
            example: M31
        - in: path
          name: filter
          required: true
          schema:
            type: string
            example: RGB
        - in: query
          name: resize
          description: Whether to resize the image.
          required: false
          schema:
            type: boolean
        - in: query
          name: quality
          description: The quality of the image, ranging from 1 (worst) to 100 (best). -1 or omitted for png
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: size
          description: The size of the image ([width]x[height]). Requires resize to be true.
          required: false
          schema:
            type: string
        - in: query
          name: scale
          description: The scale of the image. Requires resize to be true.
          required: false
          schema:
            type: number
            format: double
        - in: query
          name: stream
          description: Stream the image to the client. This will stream the image in image/jpg or image/png format.
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "<base64 encoded image>"
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
            image/png:
              schema:
                description: Image in png format, when stream is set to true and the image quality is not specified or set to -1
                type: array
                format: binary
            image/jpg:
              schema:
                description: Image in jpg format, when stream is set to true and the image quality is specified
                type: array
                format: binary
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /flats/skyflat:
    get:
      tags:
        - Flats
      summary: Sky flats
      description: Start capturing sky flats. This requires the camera and mount to be connected. Any omitted parameter will default to the instruction default.
      parameters:
        - in: query
          name: count
          required: true
          description: The number of flats to capture
          example: 1
          schema:
            type: integer
            minimum: 0
        - in: query
          name: minExposure
          required: false
          description: The minimum exposure time to use for the flats, in seconds
          example: 0
          schema:
            type: number
            minimum: 0
        - in: query
          name: maxExposure
          required: false
          description: The maximum exposure time to use for the flats, in seconds
          example: 10
          schema:
            type: number
            minimum: 0
        - in: query
          name: histogramMean
          required: false
          description: The mean to use for the histogram
          example: 50
          schema:
            type: number
            minimum: 0
            maximum: 1
        - in: query
          name: meanTolerance
          required: false
          description: The tolerance to use for the histogram
          example: 10
          schema:
            type: number
            minimum: 0
            maximum: 1
        - in: query
          name: dither
          required: false
          description: Whether to dither the flats
          example: false
          schema:
            type: boolean
        - in: query
          name: filterId
          required: false
          description: The filter to use for the flats. The current filter will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: binning
          required: false
          description: The binning to use for the flats
          example: 2x2
          schema:
            type: string
        - in: query
          name: gain
          required: false
          description: The gain to use for the flats. The camera gain will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: offset
          required: false
          description: The offset to use for the flats. The camera offset will be used if this is not specified
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Process started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Could not start the process
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    oneOf:
                      - type: string
                        example: ""
                      - type: array
                        items:
                          type: string
                          description: A list of issues found during validation
                  Error:
                    type: string
                    enum:
                      - Process already running
                      - Filter not available
                      - Binning not available
                      - Invalid gain
                      - Invalid offset
                      - Issues found
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /flats/auto-brightness:
    get:
      tags:
        - Flats
      summary: Auto Brightness Flats
      description: Start capturing auto brightness flats. This requires the camera to be connected. NINA will pick the best flat panel brightness for a fixed exposure time. Any omitted parameter will default to the instruction default.
      parameters:
        - in: query
          name: count
          required: true
          description: The number of flats to capture
          example: 1
          schema:
            type: integer
            minimum: 0
        - in: query
          name: exposureTime
          required: true
          description: The exposure time to use for the flats, in seconds
          example: 1
          schema:
            type: number
            minimum: 0
        - in: query
          name: minBrightness
          required: false
          description: The minimum flat panel brightness to use for the flats
          example: 0
          schema:
            type: integer
            minimum: 0
            maximum: 99
        - in: query
          name: maxBrightness
          required: false
          description: The maximum flat panel brightness to use for the flats
          example: 10
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - in: query
          name: histogramMean
          required: false
          description: The mean to use for the histogram
          example: 50
          schema:
            type: number
            minimum: 0
            maximum: 1
        - in: query
          name: meanTolerance
          required: false
          description: The tolerance to use for the histogram
          example: 10
          schema:
            type: number
            minimum: 0
            maximum: 1
        - in: query
          name: filterId
          required: false
          description: The filter to use for the flats. The current filter will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: binning
          required: false
          description: The binning to use for the flats
          example: 2x2
          schema:
            type: string
        - in: query
          name: gain
          required: false
          description: The gain to use for the flats. The camera gain will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: offset
          required: false
          description: The offset to use for the flats. The camera offset will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: keepClosed
          required: false
          description: Whether to keep the flat panel closed after taking the flats
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Process started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Could not start the process
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    oneOf:
                      - type: string
                        example: ""
                      - type: array
                        items:
                          type: string
                          description: A list of issues found during validation
                  Error:
                    type: string
                    enum:
                      - Process already running
                      - Filter not available
                      - Binning not available
                      - Invalid gain
                      - Invalid offset
                      - Issues found
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /flats/auto-exposure:
    get:
      tags:
        - Flats
      summary: Auto Exposure Flats
      description: Start capturing auto exposure flats. This requires the camera to be connected. NINA will pick the best exposure time for a fixed flat panel brightness. Any omitted parameter will default to the instruction default.
      parameters:
        - in: query
          name: count
          required: true
          description: The number of flats to capture
          example: 1
          schema:
            type: integer
            minimum: 0
        - in: query
          name: brightness
          required: true
          description: The flat panel brightness
          schema:
            type: number
            minimum: 0
            maximum: 100
        - in: query
          name: minExposure
          required: false
          description: The minimum exposure time to use for the flats, in seconds
          example: 0
          schema:
            type: number
            minimum: 0
        - in: query
          name: maxExposure
          required: false
          description: The maximum exposure time to use for the flats, in seconds
          schema:
            type: number
            minimum: 0
        - in: query
          name: histogramMean
          required: false
          description: The mean to use for the histogram
          example: 50
          schema:
            type: number
            minimum: 0
            maximum: 1
        - in: query
          name: meanTolerance
          required: false
          description: The tolerance to use for the histogram
          example: 10
          schema:
            type: number
            minimum: 0
            maximum: 1
        - in: query
          name: filterId
          required: false
          description: The filter to use for the flats. The current filter will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: binning
          required: false
          description: The binning to use for the flats
          example: 2x2
          schema:
            type: string
        - in: query
          name: gain
          required: false
          description: The gain to use for the flats. The camera gain will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: offset
          required: false
          description: The offset to use for the flats. The camera offset will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: keepClosed
          required: false
          description: Whether to keep the flat panel closed after taking the flats
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Process started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Could not start the process
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    oneOf:
                      - type: string
                        example: ""
                      - type: array
                        items:
                          type: string
                          description: A list of issues found during validation
                  Error:
                    type: string
                    enum:
                      - Process already running
                      - Filter not available
                      - Binning not available
                      - Invalid gain
                      - Invalid offset
                      - Issues found
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /flats/trained-dark-flat:
    get:
      tags:
        - Flats
      summary: Trained Darkflats
      description: Start capturing darkflats based on previous training in NINA. This requires the camera to be connected. Any omitted parameter will default to the instruction default.
      parameters:
        - in: query
          name: count
          required: true
          description: The number of darkflats to capture
          example: 1
          schema:
            type: integer
            minimum: 0
        - in: query
          name: filterId
          required: false
          description: The filter to use for the darkflats. The current filter will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: binning
          required: false
          description: The binning to use for the darkflats
          example: 2x2
          schema:
            type: string
        - in: query
          name: gain
          required: false
          description: The gain to use for the darkflats. The camera gain will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: offset
          required: false
          description: The offset to use for the darkflats. The camera offset will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: keepClosed
          required: false
          description: Whether to keep the flat panel closed after taking the darkflats
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Process started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Could not start the process
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    oneOf:
                      - type: string
                        example: ""
                      - type: array
                        items:
                          type: string
                          description: A list of issues found during validation
                  Error:
                    type: string
                    enum:
                      - Process already running
                      - Filter not available
                      - Binning not available
                      - Invalid gain
                      - Invalid offset
                      - Issues found
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /flats/trained-flat:
    get:
      tags:
        - Flats
      summary: Trained Flats
      description: Start capturing flats based on previous training done in NINA. This requires the camera to be connected. Any omitted parameter will default to the instruction default.
      parameters:
        - in: query
          name: count
          required: true
          description: The number of flats to capture
          example: 1
          schema:
            type: integer
            minimum: 0
        - in: query
          name: filterId
          required: false
          description: The filter to use for the flats. The current filter will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: binning
          required: false
          description: The binning to use for the flats
          example: 2x2
          schema:
            type: string
        - in: query
          name: gain
          required: false
          description: The gain to use for the flats. The camera gain will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: offset
          required: false
          description: The offset to use for the flats. The camera offset will be used if this is not specified
          schema:
            type: integer
            minimum: 0
        - in: query
          name: keepClosed
          required: false
          description: Whether to keep the flat panel closed after taking the flats
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Process started
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Could not start the process
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    oneOf:
                      - type: string
                        example: ""
                      - type: array
                        items:
                          type: string
                          description: A list of issues found during validation
                  Error:
                    type: string
                    enum:
                      - Process already running
                      - Filter not available
                      - Binning not available
                      - Invalid gain
                      - Invalid offset
                      - Issues found
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /flats/status:
    get:
      tags:
        - Flats
      summary: Status
      description: Returns the current status of the flat taking process, Running or Finished.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      CompletedIterations:
                        type: integer
                        example: 10
                      TotalIterations:
                        type: integer
                        example: 15
                      State:
                        type: string
                        enum:
                          - Running
                          - Finished
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

  /flats/stop:
    get:
      tags:
        - Flats
      summary: Stop
      description: Stop a running flat taking process
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: Process stopped
                  Error:
                    type: string
                    example: ""
                  StatusCode:
                    type: integer
                    example: 200
                  Success:
                    type: boolean
                    example: true
                  Type:
                    type: string
                    example: "API"
        "400":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: ""
                  Error:
                    type: string
                    example: No process running
                  StatusCode:
                    type: integer
                    example: 400
                  Success:
                    type: boolean
                    example: false
                  Type:
                    type: string
                    example: "API"
        "500":
          description: Internal server error, Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownError"

components:
  schemas:
    CameraInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            TargetTemp:
              type: number
            AtTargetTemp:
              type: boolean
            CanSetTemperature:
              type: boolean
            HasShutter:
              type: boolean
            Temperature:
              type: integer
            Gain:
              type: integer
            DefaultGain:
              type: integer
            ElectronsPerADU:
              type: integer
            BinX:
              type: integer
            BitDepth:
              type: integer
            BinY:
              type: integer
            CanSetOffset:
              type: boolean
            CanGetGain:
              type: boolean
            OffsetMin:
              type: integer
            OffsetMax:
              type: integer
            Offset:
              type: integer
            DefaultOffset:
              type: integer
            USBLimit:
              type: integer
            IsSubSampleEnabled:
              type: boolean
            CameraState:
              type: string
              enum:
                - NoState
                - Idle
                - Waiting
                - Exposing
                - Reading
                - Download
                - Error
                - LoadingFile
            XSize:
              type: integer
            YSize:
              type: integer
            PixelSize:
              type: integer
            Battery:
              type: integer
            GainMin:
              type: integer
            GainMax:
              type: integer
            CanSetGain:
              type: boolean
            Gains:
              type: array
              items: {}
            CoolerOn:
              type: boolean
            CoolerPower:
              type: integer
            HasDewHeater:
              type: boolean
            DewHeaterOn:
              type: boolean
            CanSubSample:
              type: boolean
            SubSampleX:
              type: integer
            SubSampleY:
              type: integer
            SubSampleWidth:
              type: integer
            SubSampleHeight:
              type: integer
            TemperatureSetPoint:
              type: integer
            ReadoutModes:
              type: array
              items:
                type: string
            ReadoutMode:
              type: integer
            ReadoutModeForSnapImages:
              type: integer
            ReadoutModeForNormalImages:
              type: integer
            IsExposing:
              type: boolean
            ExposureEndTime:
              type: string
            LastDownloadTime:
              type: integer
            SensorType:
              type: string
              enum:
                - Monochrome
                - Color
                - RGGB
                - CMYG
                - CMYG2
                - LRGB
                - BGGR
                - GBRG
                - GRBG
                - GRGB
                - GBGR
                - RGBG
                - BGRG
            BayerOffsetX:
              type: integer
            BayerOffsetY:
              type: integer
            BinningModes:
              type: array
              items:
                type: object
                properties:
                  Name:
                    type: string
                  X:
                    type: integer
                  "Y":
                    type: integer
                required:
                  - Name
                  - X
                  - "Y"
            ExposureMax:
              type: integer
            ExposureMin:
              type: integer
            LiveViewEnabled:
              type: boolean
            CanShowLiveView:
              type: boolean
            SupportedActions:
              type: array
              items:
                type: string
            CanSetUSBLimit:
              type: boolean
            USBLimitMin:
              type: integer
            USBLimitMax:
              type: integer
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            DeviceId:
              type: string
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    DomeInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            ShutterStatus:
              type: string
              enum:
                - ShutterNone
                - ShutterOpen
                - ShutterClosed
                - ShutterOpening
                - ShutterClosing
                - ShutterError
            DriverCanFollow:
              type: boolean
            CanSetShutter:
              type: boolean
            CanSetPark:
              type: boolean
            CanSetAzimuth:
              type: boolean
            CanSyncAzimuth:
              type: boolean
            CanPark:
              type: boolean
            CanFindHome:
              type: boolean
            AtPark:
              type: boolean
            AtHome:
              type: boolean
            DriverFollowing:
              type: boolean
            Slewing:
              type: boolean
            Azimuth:
              type: integer
            SupportedActions:
              type: array
              items: {}
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            Description:
              type: string
            DriverInfo:
              type: string
            DriverVersion:
              type: string
            DeviceId:
              type: string
            IsFollowing:
              type: boolean
            IsSynchronized:
              type: boolean
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    FWInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            Description:
              type: string
            DriverInfo:
              type: string
            DriverVersion:
              type: string
            DeviceId:
              type: string
            IsMoving:
              type: boolean
            SupportedActions:
              type: array
              items:
                type: string
            SelectedFilter:
              type: object
              properties:
                Name:
                  type: string
                Id:
                  type: integer
            AvailableFilters:
              type: array
              items:
                type: object
                properties:
                  Name:
                    type: string
                  Id:
                    type: integer
                required:
                  - Name
                  - Id
          required:
            - Connected
            - Name
            - DisplayName
            - Description
            - DriverInfo
            - DriverVersion
            - DeviceId
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    FilterInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            Name:
              type: string
            FocusOffset:
              type: integer
            Position:
              type: integer
            AutoFocusExposureTime:
              type: integer
            AutoFocusFilter:
              type: boolean
            FlatWizardFilterSettings:
              type: object
              properties:
                FlatWizardMode:
                  type: integer
                HistogramMeanTarget:
                  type: number
                HistogramTolerance:
                  type: number
                MaxFlatExposureTime:
                  type: integer
                MinFlatExposureTime:
                  type: number
                MaxAbsoluteFlatDeviceBrightness:
                  type: integer
                MinAbsoluteFlatDeviceBrightness:
                  type: integer
                Gain:
                  type: integer
                Offset:
                  type: integer
                Binning:
                  type: object
                  properties:
                    Name:
                      type: string
                    X:
                      type: integer
                    Y:
                      type: integer
                  required:
                    - Name
                    - X
                    - Y
              required:
                - FlatWizardMode
                - HistogramMeanTarget
                - HistogramTolerance
                - MaxFlatExposureTime
                - MinFlatExposureTime
                - MaxAbsoluteFlatDeviceBrightness
                - MinAbsoluteFlatDeviceBrightness
                - Gain
                - Offset
                - Binning
            AutoFocusBinning:
              type: object
              properties:
                Name:
                  type: string
                X:
                  type: integer
                Y:
                  type: integer
              required:
                - Name
                - X
                - Y
            AutoFocusGain:
              type: integer
            AutoFocusOffset:
              type: integer
          required:
            - Name
            - FocusOffset
            - Position
            - AutoFocusExposureTime
            - AutoFocusFilter
            - FlatWizardFilterSettings
            - AutoFocusBinning
            - AutoFocusGain
            - AutoFocusOffset
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    FlatDeviceInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            CoverState:
              type: string
              enum:
                - Unknown
                - NeitherOpenNorClosed
                - Closed
                - Open
                - Error
                - NotPresent
            LocalizedCoverState:
              type: string
            LocalizedLightOnState:
              type: string
            LightOn:
              type: boolean
            Brightness:
              type: integer
            SupportsOpenClose:
              type: boolean
            MinBrightness:
              type: integer
            MaxBrightness:
              type: integer
            SupportsOnOff:
              type: boolean
            SupportedActions:
              type: array
              items: {}
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            Description:
              type: string
            DriverInfo:
              type: string
            DriverVersion:
              type: string
            DeviceId:
              type: string
          required:
            - CoverState
            - LocalizedCoverState
            - LocalizedLightOnState
            - LightOn
            - Brightness
            - SupportsOpenClose
            - MinBrightness
            - MaxBrightness
            - SupportsOnOff
            - SupportedActions
            - Connected
            - Name
            - DisplayName
            - Description
            - DriverInfo
            - DriverVersion
            - DeviceId
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    FocuserInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            Position:
              type: integer
            StepSize:
              type: integer
            Temperature:
              type: number
            IsMoving:
              type: boolean
            IsSettling:
              type: boolean
            TempComp:
              type: boolean
            TempCompAvailable:
              type: boolean
            SupportedActions:
              type: array
              items: {}
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            Description:
              type: string
            DriverInfo:
              type: string
            DriverVersion:
              type: string
            DeviceId:
              type: string
          required:
            - Position
            - StepSize
            - Temperature
            - IsMoving
            - IsSettling
            - TempComp
            - TempCompAvailable
            - SupportedActions
            - Connected
            - Name
            - DisplayName
            - Description
            - DriverInfo
            - DriverVersion
            - DeviceId
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    FocuserLastAF:
      type: object
      properties:
        Response:
          type: object
          properties:
            Version:
              type: integer
            Filter:
              type: string
            AutoFocuserName:
              type: string
            StarDetectorName:
              type: string
            Timestamp:
              type: string
            Temperature:
              type: number
            Method:
              type: string
            Fitting:
              type: string
            InitialFocusPoint:
              type: object
              properties:
                Position:
                  type: integer
                Value:
                  type: number
                Error:
                  type: integer
              required:
                - Position
                - Value
                - Error
            CalculatedFocusPoint:
              type: object
              properties:
                Position:
                  type: number
                Value:
                  type: number
                Error:
                  type: integer
              required:
                - Position
                - Value
                - Error
            PreviousFocusPoint:
              type: object
              properties:
                Position:
                  type: number
                Value:
                  type: number
                Error:
                  type: integer
              required:
                - Position
                - Value
                - Error
            MeasurePoints:
              type: array
              items:
                type: object
                properties:
                  Position:
                    type: integer
                  Value:
                    type: number
                  Error:
                    type: number
                required:
                  - Position
                  - Value
                  - Error
            Intersections:
              type: object
              properties:
                TrendLineIntersection:
                  type: object
                  properties:
                    Position:
                      type: integer
                    Value:
                      type: number
                    Error:
                      type: integer
                  required:
                    - Position
                    - Value
                    - Error
                HyperbolicMinimum:
                  type: object
                  properties:
                    Position:
                      type: number
                    Value:
                      type: number
                    Error:
                      type: integer
                  required:
                    - Position
                    - Value
                    - Error
              required:
                - TrendLineIntersection
                - HyperbolicMinimum
            Fittings:
              type: object
              properties:
                Quadratic:
                  type: string
                Hyperbolic:
                  type: string
                Gaussian:
                  type: string
                LeftTrend:
                  type: string
                RightTrend:
                  type: string
              required:
                - Quadratic
                - Hyperbolic
                - Gaussian
                - LeftTrend
                - RightTrend
            RSquares:
              type: object
              properties:
                Quadratic:
                  type: number
                  description: Is either a number or NaN
                Hyperbolic:
                  type: number
                  description: Is either a number or NaN
                LeftTrend:
                  type: number
                  description: Is either a number or NaN
                RightTrend:
                  type: integer
                  description: Is either a number or NaN
              required:
                - Quadratic
                - Hyperbolic
                - LeftTrend
                - RightTrend
            BacklashCompensation:
              type: object
              properties:
                BacklashCompensationModel:
                  type: string
                BacklashIN:
                  type: integer
                BacklashOUT:
                  type: integer
              required:
                - BacklashCompensationModel
                - BacklashIN
                - BacklashOUT
            Duration:
              type: string
          required:
            - Version
            - Filter
            - AutoFocuserName
            - StarDetectorName
            - Timestamp
            - Temperature
            - Method
            - Fitting
            - InitialFocusPoint
            - CalculatedFocusPoint
            - PreviousFocusPoint
            - MeasurePoints
            - Intersections
            - Fittings
            - RSquares
            - BacklashCompensation
            - Duration
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    GuiderInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            Description:
              type: string
            DriverInfo:
              type: string
            DriverVersion:
              type: string
            DeviceId:
              type: string
            CanClearCalibration:
              type: boolean
            CanSetShiftRate:
              type: boolean
            CanGetLockPosition:
              type: boolean
            SupportedActions:
              type: array
              items: {}
            RMSError:
              type: object
              properties:
                RA:
                  type: object
                  properties:
                    Pixel:
                      type: integer
                    Arcseconds:
                      type: integer
                  required:
                    - Pixel
                    - Arcseconds
                Dec:
                  type: object
                  properties:
                    Pixel:
                      type: integer
                    Arcseconds:
                      type: integer
                  required:
                    - Pixel
                    - Arcseconds
                Total:
                  type: object
                  properties:
                    Pixel:
                      type: integer
                    Arcseconds:
                      type: integer
                  required:
                    - Pixel
                    - Arcseconds
                PeakRA:
                  type: object
                  properties:
                    Pixel:
                      type: integer
                    Arcseconds:
                      type: integer
                  required:
                    - Pixel
                    - Arcseconds
                PeakDec:
                  type: object
                  properties:
                    Pixel:
                      type: integer
                    Arcseconds:
                      type: integer
                  required:
                    - Pixel
                    - Arcseconds
              required:
                - RA
                - Dec
                - Total
                - PeakRA
                - PeakDec
            PixelScale:
              type: number
            LastGuideStep:
              type: object
              properties:
                RADistanceRaw:
                  type: number
                DECDistanceRaw:
                  type: number
                RADuration:
                  type: number
                DECDuration:
                  type: number
              required:
                - RADistanceRaw
                - DECDistanceRaw
                - RADuration
                - DECDuration
            State:
              type: string
              enum:
                - Looping
                - LostLock
                - Guiding
                - Stopped
                - Calibrating
          required:
            - Connected
            - CanClearCalibration
            - CanSetShiftRate
            - CanGetLockPosition
            - PixelScale
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    MountInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            SiderealTime:
              type: number
            RightAscension:
              type: number
            Declination:
              type: number
            SiteLatitude:
              type: number
            SiteLongitude:
              type: number
            SiteElevation:
              type: number
            RightAscensionString:
              type: string
            DeclinationString:
              type: string
            Coordinates:
              type: object
              properties:
                RA:
                  type: number
                RAString:
                  type: string
                RADegrees:
                  type: number
                Dec:
                  type: number
                DecString:
                  type: string
                Epoch:
                  type: string
                  enum:
                    - JNOW
                    - B1950
                    - J2000
                    - J2050
                DateTime:
                  type: object
                  properties:
                    Now:
                      type: string
                    UtcNow:
                      type: string
                  required:
                    - Now
                    - UtcNow
              required:
                - RA
                - RAString
                - RADegrees
                - Dec
                - DecString
                - Epoch
                - DateTime
            TimeToMeridianFlip:
              type: number
            SideOfPier:
              type: string
              enum:
                - pierEast
                - pierWest
                - pierUnknown
            Altitude:
              type: number
            AltitudeString:
              type: string
            Azimuth:
              type: number
            AzimuthString:
              type: string
            SiderealTimeString:
              type: string
            HoursToMeridianString:
              type: string
            AtPark:
              type: boolean
            TrackingRate:
              type: object
            TrackingEnabled:
              type: boolean
            TrackingModes:
              type: array
              items:
                type: string
                enum:
                  - Siderial
                  - Lunar
                  - Solar
                  - King
                  - Custom
                  - Stopped
            AtHome:
              type: boolean
            CanFindHome:
              type: boolean
            CanPark:
              type: boolean
            CanSetPark:
              type: boolean
            CanSetTrackingEnabled:
              type: boolean
            CanSetDeclinationRate:
              type: boolean
            CanSetRightAscensionRate:
              type: boolean
            EquatorialSystem:
              type: string
              enum:
                - JNOW
                - B1950
                - J2000
                - J2050
            HasUnknownEpoch:
              type: boolean
            TimeToMeridianFlipString:
              type: string
            Slewing:
              type: boolean
            GuideRateRightAscensionArcsecPerSec:
              type: integer
            GuideRateDeclinationArcsecPerSec:
              type: integer
            CanMovePrimaryAxis:
              type: boolean
            CanMoveSecondaryAxis:
              type: boolean
            PrimaryAxisRates:
              type: array
              items:
                type: object
            SecondaryAxisRates:
              type: array
              items:
                type: object
            SupportedActions:
              type: array
              items:
                type: string
            AlignmentMode:
              type: string
              enum:
                - AltAz
                - Polar
                - GermanPolar
            CanPulseGuide:
              type: boolean
            IsPulseGuiding:
              type: boolean
            CanSetPierSide:
              type: boolean
            CanSlew:
              type: boolean
            UTCDate:
              type: string
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            DeviceId:
              type: string
          required:
            - Connected
            - Name
            - DisplayName
            - DeviceId
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    RotatorInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            CanReverse:
              type: boolean
            Reverse:
              type: boolean
            MechanicalPosition:
              type: integer
            Position:
              type: integer
            StepSize:
              type: number
            IsMoving:
              type: boolean
            Synced:
              type: boolean
            SupportedActions:
              type: array
              items: {}
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            Description:
              type: string
            DriverInfo:
              type: string
            DriverVersion:
              type: string
            DeviceId:
              type: string
          required:
            - CanReverse
            - Reverse
            - MechanicalPosition
            - Position
            - StepSize
            - IsMoving
            - Synced
            - SupportedActions
            - Connected
            - Name
            - DisplayName
            - Description
            - DriverInfo
            - DriverVersion
            - DeviceId
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    SafetyMonitorInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            IsSafe:
              type: boolean
            SupportedActions:
              type: array
              items: {}
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            Description:
              type: string
            DriverInfo:
              type: string
            DriverVersion:
              type: string
            DeviceId:
              type: string
          required:
            - IsSafe
            - SupportedActions
            - Connected
            - Name
            - DisplayName
            - Description
            - DriverInfo
            - DriverVersion
            - DeviceId
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    SwitchInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            WritableSwitches:
              type: array
              items:
                type: object
                properties:
                  Maximum:
                    type: integer
                  Minimum:
                    type: integer
                  StepSize:
                    type: number
                  TargetValue:
                    type: integer
                  Id:
                    type: integer
                  Name:
                    type: string
                  Description:
                    type: string
                  Value:
                    type: integer
                required:
                  - Maximum
                  - Minimum
                  - StepSize
                  - TargetValue
                  - Id
                  - Name
                  - Description
                  - Value
            ReadonlySwitches:
              type: array
              items:
                type: object
                properties:
                  Id:
                    type: integer
                  Name:
                    type: string
                  Description:
                    type: string
                  Value:
                    type: integer
                required:
                  - Id
                  - Name
                  - Description
                  - Value
            SupportedActions:
              type: array
              items:
                type: string
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            Description:
              type: string
            DriverInfo:
              type: string
            DriverVersion:
              type: string
            DeviceId:
              type: string
          required:
            - WritableSwitches
            - ReadonlySwitches
            - SupportedActions
            - Connected
            - Name
            - DisplayName
            - Description
            - DriverInfo
            - DriverVersion
            - DeviceId
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    WeatherInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            AveragePeriod:
              type: integer
            CloudCover:
              type: integer
            DewPoint:
              type: number
            Humidity:
              type: integer
            Pressure:
              type: integer
            RainRate:
              type: string
            SkyBrightness:
              type: string
            SkyQuality:
              type: string
            SkyTemperature:
              type: string
            StarFWHM:
              type: string
            Temperature:
              type: number
            WindDirection:
              type: integer
            WindGust:
              type: string
            WindSpeed:
              type: number
            SupportedActions:
              type: array
              items: {}
            Connected:
              type: boolean
            Name:
              type: string
            DisplayName:
              type: string
            Description:
              type: string
            DriverInfo:
              type: string
            DriverVersion:
              type: string
            DeviceId:
              type: string
          required:
            - AveragePeriod
            - CloudCover
            - DewPoint
            - Humidity
            - Pressure
            - RainRate
            - SkyBrightness
            - SkyQuality
            - SkyTemperature
            - StarFWHM
            - Temperature
            - WindDirection
            - WindGust
            - WindSpeed
            - SupportedActions
            - Connected
            - Name
            - DisplayName
            - Description
            - DriverInfo
            - DriverVersion
            - DeviceId
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    FramingAssistantInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            BoundHeight:
              type: integer
            BoundWidth:
              type: integer
            CameraHeight:
              type: integer
            CameraWidth:
              type: integer
            CameraPixelSize:
              type: integer
            DecDegrees:
              type: integer
            DecMinutes:
              type: integer
            DecSeconds:
              type: integer
            RAHours:
              type: integer
            RAMinutes:
              type: integer
            RASeconds:
              type: integer
            FieldOfView:
              type: integer
            FocalLength:
              type: integer
            HorizontalPanels:
              type: integer
            VerticalPanels:
              type: integer
            Rectangle:
              type: object
              properties:
                OriginalX:
                  type: integer
                OriginalY:
                  type: integer
                Id:
                  type: integer
                DSOPositionAngle:
                  type: integer
                OriginalOffset:
                  type: integer
                RotationOffset:
                  type: integer
                Rotation:
                  type: integer
                TotalRotation:
                  type: integer
                X:
                  type: integer
                Y:
                  type: integer
                Width:
                  type: integer
                Height:
                  type: integer
              required:
                - OriginalX
                - OriginalY
                - Id
                - DSOPositionAngle
                - OriginalOffset
                - RotationOffset
                - Rotation
                - TotalRotation
                - X
                - Y
                - Width
                - Height
          required:
            - BoundHeight
            - BoundWidth
            - CameraHeight
            - CameraWidth
            - CameraPixelSize
            - DecDegrees
            - DecMinutes
            - DecSeconds
            - RAHours
            - RAMinutes
            - RASeconds
            - FieldOfView
            - FocalLength
            - HorizontalPanels
            - VerticalPanels
            - Rectangle
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string
      required:
        - Response
        - Error
        - StatusCode
        - Success
        - Type

    ProfileInfo:
      type: object
      properties:
        Response:
          type: object
          properties:
            Name:
              type: string
            Description:
              type: string
            Id:
              type: string
            LastUsed:
              type: string
            ApplicationSettings:
              type: object
              properties:
                Culture:
                  type: string
                DevicePollingInterval:
                  type: integer
                PageSize:
                  type: integer
                LogLevel:
                  type: string
                  enum:
                    - ERROR
                    - WARNING
                    - INFO
                    - DEBUG
                    - TRACE
            AstrometrySettings:
              type: object
              properties:
                Latitude:
                  type: number
                Longitude:
                  type: number
                Elevation:
                  type: integer
                HorizonFilePath:
                  type: string
            CameraSettings:
              type: object
              properties:
                BitDepth:
                  type: integer
                BulbMode:
                  type: string
                  enum:
                    - NATIVE
                    - SERIALPORT
                    - SERIALRELAY
                    - TELESCOPESNAPPORT
                Id:
                  type: string
                PixelSize:
                  type: integer
                RawConverter:
                  type: string
                  enum:
                    - DCRAW
                    - FREEIMAGE
                SerialPort:
                  type: string
                MinFlatExposureTime:
                  type: number
                MaxFlatExposureTime:
                  type: integer
                FileCameraFolder:
                  type: string
                FileCameraUseBulbMode:
                  type: boolean
                FileCameraIsBayered:
                  type: boolean
                FileCameraExtension:
                  type: string
                FileCameraAlwaysListen:
                  type: boolean
                FileCameraDownloadDelay:
                  type: integer
                BayerPattern:
                  type: string
                  enum:
                    - None
                    - Auto
                    - RGGB
                    - BGGR
                    - GBRG
                    - GRBG
                    - GRGB
                    - GBGR
                    - RGBG
                    - BGRG
                FLIEnableFloodFlush:
                  type: boolean
                FLIEnableSnapshotFloodFlush:
                  type: boolean
                FLIFloodDuration:
                  type: integer
                FLIFlushCount:
                  type: integer
                BitScaling:
                  type: boolean
                CoolingDuration:
                  type: integer
                WarmingDuration:
                  type: integer
                Temperature:
                  type: integer
                Gain:
                  type: integer
                Offset:
                  type: integer
                QhyIncludeOverscan:
                  type: boolean
                Timeout:
                  type: integer
                DewHeaterOn:
                  type: boolean
                ASCOMAllowUnevenPixelDimension:
                  type: boolean
                MirrorLockupDelay:
                  type: integer
                BinAverageEnabled:
                  type: boolean
                TrackingCameraASCOMServerEnabled:
                  type: boolean
                TrackingCameraASCOMServerPipeName:
                  type: string
                TrackingCameraASCOMServerLoggingEnabled:
                  type: boolean
                SBIGUseExternalCcdTracker:
                  type: boolean
                AtikGainPreset:
                  type: integer
                AtikExposureSpeed:
                  type: integer
                AtikWindowHeaterPowerLevel:
                  type: integer
                TouptekAlikeUltraMode:
                  type: boolean
                TouptekAlikeHighFullwell:
                  type: boolean
                TouptekAlikeLEDLights:
                  type: boolean
                TouptekAlikeDewHeaterStrength:
                  type: integer
                GenericCameraDewHeaterStrength:
                  type: integer
                GenericCameraFanSpeed:
                  type: integer
                ZwoAsiMonoBinMode:
                  type: boolean
                ASCOMCreate32BitData:
                  type: boolean
                BadPixelCorrection:
                  type: boolean
                BadPixelCorrectionThreshold:
                  type: integer
            ColorSchemaSettings:
              type: object
              properties:
                AltColorSchema:
                  type: string
                ColorSchema:
                  type: string
            DomeSettings:
              type: object
              properties:
                Id:
                  type: string
                ScopePositionEastWest_mm:
                  type: integer
                ScopePositionNorthSouth_mm:
                  type: integer
                ScopePositionUpDown_mm:
                  type: integer
                DomeRadius_mm:
                  type: integer
                GemAxis_mm:
                  type: integer
                LateralAxis_mm:
                  type: integer
                AzimuthTolerance_degrees:
                  type: integer
                FindHomeBeforePark:
                  type: boolean
                DomeSyncTimeoutSeconds:
                  type: integer
                SynchronizeDuringMountSlew:
                  type: boolean
                SyncSlewDomeWhenMountSlews:
                  type: boolean
                RotateDegrees:
                  type: integer
                CloseOnUnsafe:
                  type: boolean
                ParkMountBeforeShutterMove:
                  type: boolean
                RefuseUnsafeShutterMove:
                  type: boolean
                RefuseUnsafeShutterOpenSansSafetyDevice:
                  type: boolean
                ParkDomeBeforeShutterMove:
                  type: boolean
                MountType:
                  type: string
                  enum:
                    - EQUATORIAL
                    - FORK_ON_WEDGE
                DecOffsetHorizontal_mm:
                  type: integer
                SettleTimeSeconds:
                  type: integer
            FilterWheelSettings:
              type: object
              properties:
                FilterWheelFilters:
                  type: array
                  items:
                    type: object
                    properties:
                      Name:
                        type: string
                      FocusOffset:
                        type: integer
                      Position:
                        type: integer
                      AutoFocusExposureTime:
                        type: integer
                      AutoFocusFilter:
                        type: boolean
                      FlatWizardFilterSettings:
                        type: object
                        properties:
                          FlatWizardMode:
                            type: string
                            enum:
                              - DYNAMICEXPOSURE
                              - DYNAMICBRIGHTNESS
                              - SKYFLAT
                          HistogramMeanTarget:
                            type: number
                          HistogramTolerance:
                            type: number
                          MaxFlatExposureTime:
                            type: integer
                          MinFlatExposureTime:
                            type: number
                          MaxAbsoluteFlatDeviceBrightness:
                            type: integer
                          MinAbsoluteFlatDeviceBrightness:
                            type: integer
                          Gain:
                            type: integer
                          Offset:
                            type: integer
                          Binning:
                            type: object
                            properties:
                              Name:
                                type: string
                              X:
                                type: integer
                              Y:
                                type: integer
                      AutoFocusBinning:
                        type: object
                        properties:
                          Name:
                            type: string
                          X:
                            type: integer
                          Y:
                            type: integer
                      AutoFocusGain:
                        type: integer
                      AutoFocusOffset:
                        type: integer
                Id:
                  type: string
                DisableGuidingOnFilterChange:
                  type: boolean
                Unidirectional:
                  type: boolean
            FlatWizardSettings:
              type: object
              properties:
                FlatCount:
                  type: integer
                HistogramMeanTarget:
                  type: number
                HistogramTolerance:
                  type: number
                DarkFlatCount:
                  type: integer
                OpenForDarkFlats:
                  type: boolean
                AltitudeSite:
                  type: integer
                FlatWizardMode:
                  type: string
                  enum:
                    - DYNAMICEXPOSURE
                    - DYNAMICBRIGHTNESS
                    - SKYFLAT
            FocuserSettings:
              type: object
              properties:
                AutoFocusExposureTime:
                  type: integer
                AutoFocusInitialOffsetSteps:
                  type: integer
                AutoFocusStepSize:
                  type: integer
                Id:
                  type: string
                UseFilterWheelOffsets:
                  type: boolean
                AutoFocusDisableGuiding:
                  type: boolean
                FocuserSettleTime:
                  type: integer
                AutoFocusTotalNumberOfAttempts:
                  type: integer
                AutoFocusNumberOfFramesPerPoint:
                  type: integer
                AutoFocusInnerCropRatio:
                  type: integer
                AutoFocusOuterCropRatio:
                  type: integer
                AutoFocusUseBrightestStars:
                  type: integer
                BacklashIn:
                  type: integer
                BacklashOut:
                  type: integer
                AutoFocusBinning:
                  type: integer
                AutoFocusCurveFitting:
                  type: string
                  enum:
                    - TRENDLINES
                    - PARABOLIC
                    - TRENDPARABOLIC
                    - HYPERBOLIC
                    - TRENDHYPERBOLIC
                AutoFocusMethod:
                  type: string
                  enum:
                    - STARHFR
                    - CONTRASTDETECTION
                ContrastDetectionMethod:
                  type: string
                  enum:
                    - Sobel
                    - Laplace
                    - Statistics
                BacklashCompensationModel:
                  type: string
                  enum:
                    - ABSOLUTE
                    - OVERSHOOT
                AutoFocusTimeoutSeconds:
                  type: integer
                RSquaredThreshold:
                  type: number
            FramingAssistantSettings:
              type: object
              properties:
                CameraHeight:
                  type: integer
                CameraWidth:
                  type: integer
                FieldOfView:
                  type: integer
                Opacity:
                  type: number
                LastSelectedImageSource:
                  type: string
                  enum:
                    - NASA
                    - SKYSERVER
                    - STSCI
                    - ESO
                    - HIPS2FITS
                    - SKYATLAS
                    - FILE
                    - CACHE
                LastRotationAngle:
                  type: integer
                SaveImageInOfflineCache:
                  type: boolean
            GuiderSettings:
              type: object
              properties:
                GuiderName:
                  type: string
                DitherPixels:
                  type: integer
                DitherRAOnly:
                  type: boolean
                PHD2GuiderScale:
                  type: string
                  enum:
                    - PIXELS
                    - ARCSECONDS
                MaxY:
                  type: integer
                PHD2HistorySize:
                  type: integer
                PHD2ServerPort:
                  type: integer
                PHD2ServerUrl:
                  type: string
                PHD2InstanceNumber:
                  type: integer
                SettleTime:
                  type: integer
                SettlePixels:
                  type: number
                SettleTimeout:
                  type: integer
                PHD2Path:
                  type: string
                AutoRetryStartGuiding:
                  type: boolean
                AutoRetryStartGuidingTimeoutSeconds:
                  type: integer
                MetaGuideUseIpAddressAny:
                  type: boolean
                MetaGuidePort:
                  type: integer
                MGENFocalLength:
                  type: integer
                MGENPixelMargin:
                  type: integer
                MetaGuideMinIntensity:
                  type: integer
                MetaGuideDitherSettleSeconds:
                  type: integer
                MetaGuideLockWhenGuiding:
                  type: boolean
                PHD2ROIPct:
                  type: integer
                SkyGuardServerPort:
                  type: integer
                SkyGuardServerUrl:
                  type: string
                SkyGuardPath:
                  type: string
                SkyGuardCallbackPort:
                  type: integer
                SkyGuardTimeLapsChecked:
                  type: boolean
                SkyGuardValueMaxGuiding:
                  type: integer
                SkyGuardTimeLapsGuiding:
                  type: integer
                SkyGuardTimeLapsDitherChecked:
                  type: boolean
                SkyGuardValueMaxDithering:
                  type: integer
                SkyGuardTimeLapsDithering:
                  type: integer
                SkyGuardTimeOutGuiding:
                  type: integer
                GuideChartRightAscensionColor:
                  type: object
                  properties:
                    A:
                      type: integer
                    R:
                      type: integer
                    G:
                      type: integer
                    B:
                      type: integer
                    ScA:
                      type: integer
                    ScR:
                      type: integer
                    ScG:
                      type: integer
                    ScB:
                      type: integer
                GuideChartDeclinationColor:
                  type: object
                  properties:
                    A:
                      type: integer
                    R:
                      type: integer
                    G:
                      type: integer
                    B:
                      type: integer
                    ScA:
                      type: integer
                    ScR:
                      type: integer
                    ScG:
                      type: integer
                    ScB:
                      type: integer
                GuideChartShowCorrections:
                  type: boolean
            ImageFileSettings:
              type: object
              properties:
                FilePath:
                  type: string
                FilePattern:
                  type: string
                FilePatternDARK:
                  type: string
                FilePatternBIAS:
                  type: string
                FilePatternFLAT:
                  type: string
                FileType:
                  type: string
                  enum:
                    - TIFF
                    - FITS
                    - XISF
                    - TIFF_ZIP
                    - TIFF_LZW
                    - RAW
                TIFFCompressionType:
                  type: string
                  enum:
                    - NONE
                    - ZIP
                    - LZW
                XISFCompressionType:
                  type: string
                  enum:
                    - NONE
                    - LZ4
                    - LZ4HC
                    - ZLIB
                XISFChecksumType:
                  type: string
                  enum:
                    - NONE
                    - SHA1
                    - SHA256
                    - SHA512
                    - SHA3_256
                    - SHA3_512
                XISFByteShuffling:
                  type: boolean
                FITSCompressionType:
                  type: string
                  enum:
                    - NONE
                    - RICE
                    - GZIP1
                    - GZIP2
                    - PLIO
                    - HCOMPRESS
                FITSAddFzExtension:
                  type: boolean
                FITSUseLegacyWriter:
                  type: boolean
            ImageSettings:
              type: object
              properties:
                AnnotateImage:
                  type: boolean
                DebayerImage:
                  type: boolean
                DebayeredHFR:
                  type: boolean
                UnlinkedStretch:
                  type: boolean
                AnnotateUnlimitedStars:
                  type: boolean
                AutoStretchFactor:
                  type: number
                BlackClipping:
                  type: number
                StarSensitivity:
                  type: string
                  enum:
                    - Normal
                    - High
                    - Highest
                NoiseReduction:
                  type: string
                  enum:
                    - None
                    - Median
                    - Normal
                    - High
                    - Highest
                DetectStars:
                  type: boolean
                AutoStretch:
                  type: boolean
            MeridianFlipSettings:
              type: object
              properties:
                MinutesAfterMeridian:
                  type: integer
                MaxMinutesAfterMeridian:
                  type: integer
                PauseTimeBeforeMeridian:
                  type: integer
                Recenter:
                  type: boolean
                SettleTime:
                  type: integer
                UseSideOfPier:
                  type: boolean
                AutoFocusAfterFlip:
                  type: boolean
                RotateImageAfterFlip:
                  type: boolean
            PlanetariumSettings:
              type: object
              properties:
                StellariumHost:
                  type: string
                StellariumPort:
                  type: integer
                CdCHost:
                  type: string
                CdCPort:
                  type: integer
                TSXHost:
                  type: string
                TSXPort:
                  type: integer
                TSXUseSelectedObject:
                  type: boolean
                HNSKYHost:
                  type: string
                HNSKYPort:
                  type: integer
                C2AHost:
                  type: string
                C2APort:
                  type: integer
                SkytechXHost:
                  type: string
                SkytechXPort:
                  type: integer
                PreferredPlanetarium:
                  type: string
                  enum:
                    - CDC
                    - STELLARIUM
                    - THESKYX
                    - HNSKY
                    - C2A
                    - SKYTECHX
            PlateSolveSettings:
              type: object
              properties:
                AstrometryURL:
                  type: string
                AstrometryAPIKey:
                  type: string
                BlindSolverType:
                  type: string
                  enum:
                    - ASTROMETRY_NET
                    - LOCAL
                    - ASPS
                    - ASTAP
                    - PLATESOLVE3
                    - PINPOINT
                CygwinLocation:
                  type: string
                ExposureTime:
                  type: integer
                Gain:
                  type: integer
                Binning:
                  type: integer
                PlateSolverType:
                  type: string
                  enum:
                    - ASTROMETRY_NET
                    - LOCAL
                    - PLATESOLVE2
                    - PLATESOLVE3
                    - ASPS
                    - ASTAP
                    - TSX_IMAGELINK
                    - PINPONT
                PS2Location:
                  type: string
                PS3Location:
                  type: string
                Regions:
                  type: integer
                SearchRadius:
                  type: integer
                Threshold:
                  type: integer
                RotationTolerance:
                  type: integer
                ReattemptDelay:
                  type: integer
                NumberOfAttempts:
                  type: integer
                AspsLocation:
                  type: string
                ASTAPLocation:
                  type: string
                DownSampleFactor:
                  type: integer
                MaxObjects:
                  type: integer
                Sync:
                  type: boolean
                SlewToTarget:
                  type: boolean
                BlindFailoverEnabled:
                  type: boolean
                TheSkyXHost:
                  type: string
                TheSkyXPort:
                  type: integer
                PinPointCatalogType:
                  type: string
                  enum:
                    - ppGSCACT
                    - ppTycho2
                    - ppUSNO_A
                    - ppUCAC2
                    - ppUSNO_B
                    - ppUCAC3
                    - ppUCAC4
                    - ppAtlas
                PinPointCatalogRoot:
                  type: string
                PinPointMaxMagnitude:
                  type: integer
                PinPointExpansion:
                  type: integer
                PinPointAllSkyApiKey:
                  type: string
                PinPointAllSkyApiHost:
                  type: string
            RotatorSettings:
              type: object
              properties:
                Id:
                  type: string
                Reverse2:
                  type: boolean
                RangeType:
                  type: string
                  enum:
                    - FULL
                    - HALF
                    - QUARTER
                RangeStartMechanicalPosition:
                  type: integer
            FlatDeviceSettings:
              type: object
              properties:
                Id:
                  type: string
                PortName:
                  type: string
                SettleTime:
                  type: integer
                TrainedFlatExposureSettings:
                  type: array
                  items: {}
            SequenceSettings:
              type: object
              properties:
                EstimatedDownloadTime:
                  type: string
                TemplatePath:
                  type: string
                TimeSpanInTicks:
                  type: integer
                ParkMountAtSequenceEnd:
                  type: boolean
                CloseDomeShutterAtSequenceEnd:
                  type: boolean
                ParkDomeAtSequenceEnd:
                  type: boolean
                WarmCamAtSequenceEnd:
                  type: boolean
                DefaultSequenceFolder:
                  type: string
                StartupSequenceTemplate:
                  type: string
                SequencerTemplatesFolder:
                  type: string
                SequencerTargetsFolder:
                  type: string
                CollapseSequencerTemplatesByDefault:
                  type: boolean
                CoolCameraAtSequenceStart:
                  type: boolean
                UnparMountAtSequenceStart:
                  type: boolean
                OpenDomeShutterAtSequenceStart:
                  type: boolean
                DoMeridianFlip:
                  type: boolean
                DisableSimpleSequencer:
                  type: boolean
            SwitchSettings:
              type: object
              properties:
                Id:
                  type: string
            TelescopeSettings:
              type: object
              properties:
                Name:
                  type: string
                MountName:
                  type: string
                FocalLength:
                  type: integer
                FocalRatio:
                  type: integer
                Id:
                  type: string
                SettleTime:
                  type: integer
                SnapPortStart:
                  type: string
                SnapPortStop:
                  type: string
                NoSync:
                  type: boolean
                TimeSync:
                  type: boolean
                PrimaryReversed:
                  type: boolean
                SecondaryReversed:
                  type: boolean
                TelescopeLocationSyncDirection:
                  type: string
                  enum:
                    - PROMPT
                    - TOAPPLICATION
                    - TOTELESCOPE
                    - NOSYNC
            WeatherDataSettings:
              type: object
              properties:
                Id:
                  type: string
                OpenWeatherMapAPIKey:
                  type: string
                TheWeatherCompanyAPIKey:
                  type: string
                WeatherUndergroundAPIKey:
                  type: string
                WeatherUndergroundStation:
                  type: string
            SnapShotControlSettings:
              type: object
              properties:
                ExposureDuration:
                  type: integer
                Gain:
                  type: integer
                Save:
                  type: boolean
                Loop:
                  type: boolean
            SafetyMonitorSettings:
              type: object
              properties:
                Id:
                  type: string
            AlpacaSettings:
              type: object
              properties:
                NumberOfPolls:
                  type: integer
                PollInterval:
                  type: integer
                DiscoveryPort:
                  type: integer
                DiscoveryDuration:
                  type: integer
                ResolveDnsName:
                  type: boolean
                UseIPv4:
                  type: boolean
                UseIPv6:
                  type: boolean
                UseHttps:
                  type: boolean
            ImageHistorySettings:
              type: object
              properties:
                ImageHistoryLeftSelected:
                  type: string
                  enum:
                    - NONE
                    - HFR
                    - Stars
                    - Median
                    - Mean
                    - StDev
                    - MAD
                    - Temperature
                    - Rms
                ImageHistoryRightSelected:
                  type: string
                  enum:
                    - NONE
                    - HFR
                    - Stars
                    - Median
                    - Mean
                    - StDev
                    - MAD
                    - Temperature
                    - Rms
        Error:
          type: string
        StatusCode:
          type: integer
          example: 200
        Success:
          type: boolean
          example: true
        Type:
          type: string
          example: "API"

    SequenceBaseJson:
      type: object
      properties:
        Response:
          type: array
          items:
            oneOf:
              - type: object
                properties:
                  Conditions:
                    type: array
                    items: {}
                  Items:
                    type: array
                    items: {}
                    description: Contains sequence instructions as well as containers
                  Triggers:
                    type: array
                    items: {}
                  Status:
                    type: string
                  Name:
                    type: string
              - type: object
                properties:
                  GlobalTriggers:
                    type: array
                    items: {}

        Error:
          type: string
          example: ""
        StatusCode:
          type: integer
          example: 200
        Success:
          type: boolean
          example: true
        Type:
          type: string
          example: "API"

    DeviceList:
      type: object
      properties:
        Response:
          type: array
          items:
            type: object
            properties:
              HasSetupDialog:
                type: boolean
              Id:
                type: string
              Name:
                type: string
              DisplayName:
                type: string
              Category:
                type: string
              Connected:
                type: boolean
              Description:
                type: string
              DriverInfo:
                type: string
              DriverVersion:
                type: string
              SupportedActions:
                type: array
                items: {}
        Error:
          type: string
          example: ""
        StatusCode:
          type: integer
          example: 200
        Success:
          type: boolean
          example: true
        Type:
          type: string
          example: "API"

    GuideStepsHistory:
      type: object
      properties:
        Response:
          type: object
          properties:
            RMS:
              type: object
              properties:
                RA:
                  type: number
                Dec:
                  type: number
                Total:
                  type: number
                RAText:
                  type: string
                DecText:
                  type: string
                TotalText:
                  type: string
                PeakRAText:
                  type: string
                PeakDecText:
                  type: string
                Scale:
                  type: number
                PeakRA:
                  type: number
                PeakDec:
                  type: number
                DataPoints:
                  type: integer
            Interval:
              type: integer
            MaxY:
              type: integer
            MinY:
              type: integer
            MaxDurationY:
              type: integer
            MinDurationY:
              type: integer
            GuideSteps:
              type: array
              items:
                type: object
                properties:
                  Id:
                    type: integer
                  IdOffsetLeft:
                    type: number
                  IdOffsetRight:
                    type: number
                  RADistanceRaw:
                    type: number
                  RADistanceRawDisplay:
                    type: number
                  RADuration:
                    type: integer
                  DECDistanceRaw:
                    type: number
                  DECDistanceRawDisplay:
                    type: number
                  DECDuration:
                    type: integer
                  Dither:
                    type: string
            HistorySize:
              type: integer
            PixelScale:
              type: number
            Scale:
              type: integer
        Error:
          type: string
        StatusCode:
          type: integer
        Success:
          type: boolean
        Type:
          type: string

    UnknownError:
      type: object
      properties:
        Response:
          type: string
          example: ""
        Error:
          type: string
          example: Unknown error
        StatusCode:
          type: integer
          example: 500
        Success:
          type: boolean
          example: false
        Type:
          type: string
          example: "API"
